name: Build ksuinit

on:
  push:
    branches: [ "master" ]
    tags: [ 'v*.*.*' ]
    paths:
      - '.github/workflows/build-ksuinit.yml'
      - 'src/**'
  pull_request:
    branches: [ "master" ]
    paths:
      - 'src/**'

jobs:
  build-ksuinit:
    name: Build ksuinit
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Install Rust Android target
      run: |
        rustup update stable
        rustup target add aarch64-linux-android
        rustup target add x86_64-linux-android

    - name: Set Rust & Android linker
      run: |
        TOOLCHAIN="$ANDROID_NDK/toolchains/llvm/prebuilt/linux-x86_64"
        if [ ! -d "$TOOLCHAIN" ]; then
          echo "Android NDK not found at $ANDROID_NDK"
          exit 1
        fi
        echo "CARGO_TARGET_AARCH64_LINUX_ANDROID_LINKER=$TOOLCHAIN/bin/aarch64-linux-android21-clang" >> $GITHUB_ENV
        echo "CARGO_TARGET_X86_64_LINUX_ANDROID_LINKER=$TOOLCHAIN/bin/x86_64-linux-android21-clang" >> $GITHUB_ENV

    - name: Build for aarch64
      run: cargo build --target aarch64-linux-android --release

    - name: Build for x86_64
      run: cargo build --target x86_64-linux-android --release

    - name: Upload aarch64 binary
      uses: actions/upload-artifact@v4
      with:
        name: ksuinit-aarch64
        path: target/aarch64-linux-android/release/ksuinit

    - name: Upload x86_64 binary
      uses: actions/upload-artifact@v4
      with:
        name: ksuinit-x86_64
        path: target/x86_64-linux-android/release/ksuinit

    - name: Prepare release assets
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        mkdir -p release
        cp target/aarch64-linux-android/release/ksuinit release/ksuinit-aarch64
        cp target/x86_64-linux-android/release/ksuinit release/ksuinit-x86_64

    - name: Upload release assets
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v4
      with:
        name: release-assets
        path: release/

  release:
    name: Publish GitHub Release
    needs: build-ksuinit
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: release-assets
        path: release/

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          release/ksuinit-aarch64
          release/ksuinit-x86_64
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
